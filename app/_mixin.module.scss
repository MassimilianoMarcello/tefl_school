@import "./theme.module";


// Flexbox categories
@mixin flexProperties {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  @mixin flexPropertiesRow {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    // align-items: center;
  }
  .flex-item {
    flex: 1;
    // Altre proprietà degli item...
  }
  
  @mixin padOne {
    padding: 1rem;
  }
  // POSITION
  @mixin posAbsoluteTopLeft {
    position: absolute;
    top: 0;
    left: 0;
  }

  @mixin posAbsoluteTopRight {
    position: absolute;
    top: 0;
    right: 0;
  }

  
  @mixin posAbsoluteBottomRight {
    position: absolute;
    bottom: 0;
    right: 0;
  }
  @mixin posAbsoluteBottomRightLeft {
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
  }
  
  @mixin posAbsoluteBottomLeft {
    position: absolute;
    bottom: 0;
    left: 0;
  }
  @mixin posRelative{
    position: relative;
  }
  
  
  
  // Grid categories
  @mixin grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    grid-gap: $spacer;
    // Altre proprietà grid...
  }

  // LIST

@mixin listItem {
  list-style: none; 
  margin: 0; 
  padding: .5rem;



}

@mixin Link {
 text-decoration: none;

}

// Mixin per lo stile dei pulsanti
@mixin button-style($bg-color, $text-color, $hover-bg-color, $hover-text-color) {
  display: inline-block;
  padding: 0.75em 1.5em;
  border: none;
  border-radius: $borderRadius;
  background-color: $bg-color;
  color: $text-color;
  font-size: $font-size-base;
  text-align: center;
  text-decoration: none;
  list-style: none; 
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
  margin:0 1rem;

  &:hover,
  &:focus {
    background-color: $hover-bg-color;
    color: $hover-text-color;
  }
}

@mixin button-styling {
  display: inline-block;
  padding: 0.7rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  line-height: 1;
  letter-spacing: 0.02em;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-weight: 700;
  border-radius: 0.333em;
  background: #fff;
  color: #0741a4;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
}

$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

// Mixin per rispondere ai breakpoint
@mixin respond-to($breakpoint, $type: min) {
  // Controlla se il breakpoint è definito nella mappa
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    // Costruisci la query media
    $query: if($type == min, min-width, max-width);
    @media (#{$query}: $value) {
      @content;
    }
  } @else {
    // Se il breakpoint non è definito, emetti un avviso
    @warn "Breakpoint #{$breakpoint} non definito nella mappa dei breakpoint.";
  }
}